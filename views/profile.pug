doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Profile
    link(rel="stylesheet", href="../static/profile.css")
  body
    div.navbar
        div#logo
            img(src="../static/img/logo/logo.png", alt="")
        div#menu
            ul
                li.list-inline-item.h6.bg-bottom
                    a(href="/") Home
                li.list-inline-item.h6.bg-bottom
                    a(href="/courses") Courses
                li.list-inline-item.h6
                    button.btn.login-button#loginProfileIcon
                      a(href="/login") Login
                    button.btn.login-button#userProfileIcon(style="display:none;")
                div#userProfileIconLogout
                    button.btn.login-button#logout-button
                        a(href="/profile") Profile
                    button.btn.login-button#logout-button
                        a(href="/logout") Logout
    div#container
        div.sidebar#sideBarList
            p.cursor#allButton
                a(href='#personal-details') Personal Details
            p.cursor#allButton
                a(href='#my-learning') My Learning
            p.cursor#allButton
                a(href='#delete-account') Delete Account
        div#Main-Container
            div#personal-details.subcontainerOfMain
            div#my-learning.subcontainerOfMain
            div#delete-account.subcontainerOfMain
                button.btn.btn-danger.cursor#deleteAccountButton Delete Account
    script(type='text/javascript').
        var obj=!{obj}
        var x=obj.data;

                function displayPersonalDetails() {
            var personalDetails = document.getElementById("personal-details");
            var userInfo = obj.userInfo;
        
            // Display username with an input field
            var userNamePara = document.createElement('p');
            userNamePara.textContent = "User Name: ";
            personalDetails.appendChild(userNamePara);
        
            var userNameInput = document.createElement('input');
            userNameInput.type = 'text';
            userNameInput.value = userInfo.username;
            userNamePara.appendChild(userNameInput);
        
            // Add update button for username
            var updateUserNameButton = document.createElement('button');
            updateUserNameButton.textContent = 'Update';
            updateUserNameButton.classList.add('btn');
            updateUserNameButton.classList.add('login-button');
            updateUserNameButton.addEventListener('click', function() {
                var newUserName = userNameInput.value;
                if (newUserName) {
                console.log(newUserName);
                    // Send updated username to the server
                    fetch(`/updateUserName?newUserName=${newUserName}`, {
                        method: 'POST',
                        credentials: 'same-origin',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ newUsername: newUserName })
                    })
                    .then(response => {
                        console.log(response.ok);
                        if (response.ok) {
                            // Update username on the page
                            userInfo.username = newUserName;
                            userNameInput.value = newUserName;
                        } else {
                            console.error('Failed to update username');
                        }
                    })
                    .catch(error => {
                        console.error('Error updating username:', error);
                    });
                }
            });
            personalDetails.appendChild(updateUserNameButton);
        
            // Display email with an input field
            var emailPara = document.createElement('p');
            emailPara.textContent = "User Email: ";
            personalDetails.appendChild(emailPara);
        
            var emailInput = document.createElement('input');
            emailInput.type = 'email';
            emailInput.value = userInfo.email;
            emailPara.appendChild(emailInput);
        
            // Add update button for email
            var updateEmailButton = document.createElement('button');
            updateEmailButton.textContent = 'Update';
            updateEmailButton.classList.add('btn');
            updateEmailButton.classList.add('login-button');
            updateEmailButton.addEventListener('click', function() {
                var newEmail = emailInput.value;
                if (newEmail) {
                    // Send updated email to the server
                    fetch(`/updateEmail?newEmail=${newEmail}`, {
                        method: 'POST',
                        credentials: 'same-origin',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ newEmail: newEmail })
                    })
                    .then(response => {
                        if (response.ok) {
                            // Update email on the page
                            userInfo.email = newEmail;
                            emailInput.value = newEmail;
                        } else {
                            console.error('Failed to update email');
                        }
                    })
                    .catch(error => {
                        console.error('Error updating email:', error);
                    });
                }
            });
            personalDetails.appendChild(updateEmailButton);
            if (userInfo.verifiedEmail) {
                // Create a "Verified" button
                var verifiedButton = document.createElement('button');
                verifiedButton.innerHTML = `
                Verified <img src="../static/img/profile/green_tick.gif">`;
                //- verifiedButton.disabled = true;
                verifiedButton.classList.add('btn');
                //- verifiedButton.classList.add('cursor');
                emailPara.appendChild(verifiedButton);
            } else {
                // Create the "Send Verification Email" button
                var verifyEmailButton = document.createElement('button');
                verifyEmailButton.textContent = 'Send Verification Email';
                verifyEmailButton.classList.add('login-button');
                verifyEmailButton.id=('verifyEmailButton');
                verifyEmailButton.classList.add('btn');
                verifyEmailButton.classList.add('cursor');
                emailPara.appendChild(verifyEmailButton);

                // Add event listener for sending verification email
                verifyEmailButton.addEventListener('click', sendVerificationEmail);

                // Create a div for displaying verification status message
                var verificationMessage = document.createElement('button');
                verificationMessage.id = 'verificationMessage';
                verificationMessage.classList.add('btn');
                verificationMessage.style.display = 'none';
                emailPara.appendChild(verificationMessage);
            }
        }


        displayPersonalDetails();

        function AddingDetails(x){
            var myLearning = document.getElementById("my-learning");
            var enrolledCourses = obj.userInfo.enrolledCourses;
            x.forEach(function(course) {
                if (enrolledCourses.includes(course._id)) {
                    var courseDiv = document.createElement('div');
                    courseDiv.innerHTML = `
                    <div class="subcontainer" id="${course.domain}">
                        <a class="hoverclass">
                            <img src="${course.img}">
                            <div class="card-content" onclick="event.stopPropagation()">
                                <h1>${course.name}</a></h1>
                                <p>${course.duration}</p>
                                <button id="enrollButton-${course._id}" onclick="enrollCourse('${course._id}')" class="${obj.userInfo.enrolledCourses.includes(course._id) ? 'btn login-button enrolledButton' : 'btn login-button enrollButton'}">
                                    ${obj.userInfo.enrolledCourses.includes(course._id) ? 'Enrolled' : 'Enroll'}
                            </div>
                        </a>
                    </div>
                    `;
                    myLearning.appendChild(courseDiv);
                }
            });
        }
        AddingDetails(x)
                
        if (obj.login){
            document.getElementById('userProfileIcon').style.display='block';
            document.getElementById('userProfileIcon').innerHTML = `
                ${obj.username[0].toUpperCase()}
            `;
            document.getElementById('loginProfileIcon').style.display='none';
        }
        else{
            document.getElementById('userProfileIcon').style.display='none';
            document.getElementById('loginProfileIcon').style.display='block';
        }

        document.getElementById('userProfileIcon').addEventListener('click',()=>{
            if(document.getElementById('userProfileIconLogout').style.display=="none"){
                document.getElementById('userProfileIconLogout').style.display="flex";
            }
            else{
                document.getElementById('userProfileIconLogout').style.display="none";
            }
        })
        document.getElementById('deleteAccountButton').addEventListener('click', function() {
            if (confirm("Are you sure you want to delete your account?")) {
                fetch('/deleteAccount', {
                    method: 'DELETE',
                    credentials: 'same-origin'
                })
                .then(response => {
                    if (response.ok) {
                        // Redirect to the home page or show a confirmation message
                        window.location.href = '/';
                    } else {
                        console.error('Failed to delete account');
                    }
                })
                .catch(error => {
                    console.error('Error deleting account:', error);
                });
            }
        });
        function enrollCourse(courseId) {
            const button = document.getElementById(`enrollButton-${courseId}`);
            const isEnrolled = button.textContent.trim() === 'Enrolled';
            console.log(button.textContent);
            fetch(`/enroll?courseId=${courseId}`, {
                method: isEnrolled ? 'DELETE' : 'POST',
                credentials: 'same-origin'
            })
            .then(response => {
                if (response.ok) {
                    if (isEnrolled) {
                        // Update UI to show "Enroll"
                        button.textContent = 'Enroll';
                        button.disabled = false;
                        button.style.backgroundColor= "rgb(42 148 164)";
                        button.style.color= "white";

                    } else {
                        // Update UI to show "Enrolled"
                        button.textContent = 'Enrolled';
                        button.style.backgroundColor= "white";
                        button.style.color= "grey";
                        //- button.disabled = true;
                    }
                } else {
                    console.error(isEnrolled ? 'Failed to unenroll from the course' : 'Failed to enroll in the course');
                }
            })
            .catch(error => {
                console.error('Error handling course enrollment:', error);
            });
        }
        // Function to send verification email
        function sendVerificationEmail() {
            fetch(`/sendVerificationEmail?email=${obj.userInfo.email}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email: obj.userInfo.email }) // Send user's email for verification
            })
            .then(response => {
                console.log(obj.userInfo.email)
                if (response.ok) {
                    // Show verification status message
                    document.getElementById('verificationMessage').innerHTML = `Verification email sent
                    <img src="../static/img/profile/green_tick.gif">
                    `;
                    document.getElementById('verificationMessage').style.display = 'inline';
                } else {
                    console.error('Failed to send verification email');
                }
            })
            .catch(error => {
                console.error('Error sending verification email:', error);
            });
        }

        // Event listener for sending verification email button
        document.getElementById('verifyEmailButton').addEventListener('click', sendVerificationEmail);
        // Function to display the verification status button
        

